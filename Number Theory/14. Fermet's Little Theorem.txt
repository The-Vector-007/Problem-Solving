If p is a prime number and a is any integer which is not a multiple of p then,

                                                a^p ≅ a (mod p)

                                                    a < p
                                                    -----> a^p % p = a 
                                                    |    
                                            If ------
                                                    |
                                                    -----> a^p % p = a % p
                                                    a > p

In other form,

                                                a^p  ≅  a (mod p)

                    dividing both sides by a,

                                                a^(p-1)  ≅  1 (mod p) -- (1)

                    Eq (1) is used to calculate Modular Multiplicative Inverse of a number.


Calculating MMI of a number using Fermat's Little Theorem :-

                                We know that,
                                                (A.B) % m = 1 , then B = A^-1

                                    Imp : If m is prime then,

                                                A^(m-1)  ≅  1 (mod m)  [ According to eq 1 ]

                                    Multiplying both sides by A^-1,

                                                A^(m-2)  ≅ A^-1 (mod m)           

                                                        or
                                                
                                                A^-1 % m  =  A^(m-2) % m <== remember

                                We can find A^(m-2) % m using modular exponentiation.

NOTE :-

A^-1 = [1,m-1] => A^-1 < m . So, A^-1 % m = A^-1. Therefore, A^-1 = A^(m-2) % m.

Code :-

// finding a^b % m
int modExp(int a, int b, int m){
    if( b == 0 ){
        return 1 % m;
    }
    int res = 1;
    while( b > 0 ){
        if( b & 1 ){    // b is odd
            res = (res * a) % m;
        }
        a = (a * a) % m;
        b = b/2;
    }

    return res;
}

// A % m , A^-1 (MMI) if m is prime then use Fermet Theorem i.e. A^-1 = A^(m-2) % m (m is prime in most of the cases)
void modInverseFermat(int A, int m){
    //if( __gcd(A,m) != 1 ){ <-- No need to check as m is prime so gcd(A,m) will be always 1 but m != A.
        //cout << "MMI doesn't exist" << endl;   
    //}

    cout << modExp(A,m-2,m) << endl;
}



                                                