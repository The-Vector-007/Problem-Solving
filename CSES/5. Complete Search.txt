(1) Code for generating all possible combinations or subsets of a set :-

for example, {1,2,3} --> { null }, {1}, {2}, {3}, {1,2}, {2,3}, {1,3}, {1,2,3} --> 2^size of set --> 2^3 = 8.
we can achieve this by taking a binary string of length n (here 3) and create its all combinations.

0	000	

1	001	

2	010

3	011

4	100

5	101

6	110

7	111

(2^n - 1)

for (int b = 0; b < (1<<n); b++) { // for each incoming binary string find where the value is set i.e 1.
	vector<int> subset;
	for (int i = 0; i < n; i++) {
		if (b&(1<<i)) subset.push_back(i); // 1<<i taking a binary string where ith value is set.
	}
}

(2) Code for Generating Permutations :-

using C++ standard library function next_permutation.

e.g:-

vector<int> permutation;
for(int i = 0; i < n; i++){
permutation.push_back(i);
}

do{
	// process permutation
}while( next_permutation( permutation.begin(), permutation.end() );
