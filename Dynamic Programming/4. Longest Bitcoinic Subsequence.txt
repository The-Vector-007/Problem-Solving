void LIS(vector<int>& input, int n, vector<int>& arr){
    
    
    for( int i = 1; i < n; i++ ){
        arr[i] = 1;
        for( int j = i-1; j >= 0; j-- ){
            if( input[j] < input[i] ){
                arr[i] = max(arr[i], arr[j] + 1);
            }
        }
    }


}

int LongestBitonicSequence(vector<int>nums)
{
    vector<int> front(nums.size(), 1), back(nums.size(), 1);
    int n = nums.size();
    LIS(nums,n,front);
    
    reverse(nums.begin(), nums.end());
    
    LIS(nums,n,back);
    
    reverse(back.begin(), back.end());
    
    int ans = 0;
    
    for( int i = 0; i < n; i++ ){
        if( front[i] + back[i] - 1 > ans ){
            ans = front[i] + back[i] - 1;
        }
    }
    
    return ans;
    
}