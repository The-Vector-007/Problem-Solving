vector<int>* getRootToNodePathBST( BinaryTreeNode<int>* root, int data ){ // returns reverse vector if path exists else NULL

    if( root == NULL ){
        return NULL;
    }

    if( root->data == data ){
        vector<int>* output = new vector<int>();
        output->push_back(root->data);
        return output;
    }

    else if( data < root->data ){
        vector<int>* leftOutput = getRootToNodePath(root->left, data);
        if( leftOutput != NULL ){
            leftOutput->push_back(root->data);
            return leftOutput;
        }
    }

    else{
        vector<int>* rightOutput = getRootToNodePath(root->right, data);
        if( rightOutput != NULL ){
            rightOutput->push_back(root->data);
            return rightOutput;
        }
    }

    return NULL;
}