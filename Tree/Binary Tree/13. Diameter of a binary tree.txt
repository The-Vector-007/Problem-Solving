//(heigh, diameter) | Diameter - max distance between two nodes in terms of edges.
pair<int,int> heightDiameter( BinaryTreeNode<int>* root ){
    if( root == NULL ){
        pair<int,int> p;
        p.first = 0; // height
        p.second = 0; // diameter
        return p;
    }

    pair<int,int> leftAns = heightDiameter(root->left);
    pair<int,int> rightAns = heightDiameter(root->right);

    int lh = leftAns.first;
    int ld = leftAns.second;
    int rh = rightAns.first;
    int rd = rightAns.second;

    int height = 1 + max(lh,rh);
    int diameter = max( (lh+rh), max( ld, rd ) );
    
    pair<int,int> Ans;
    Ans.first = height;
    Ans.second = diameter;

    return Ans;
}

Time Complexity - O(n) // n - no of nodes