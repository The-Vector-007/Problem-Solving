void printBinaryTreeLevelWise( BinaryTreeNode<int>* root ){
    if( root == NULL ){
        return;
    }

    queue<BinaryTreeNode<int>*> pendingNodes;
    pendingNodes.push(root);

    while(!pendingNodes.empty()){
        BinaryTreeNode<int>* front = pendingNodes.front();
        pendingNodes.pop();

        cout << front->data << " : ";

        if( front->left != NULL ){
            cout << "L - " << front->left->data;
            pendingNodes.push(front->left);
        }

        if( front->right != NULL ){
            cout << ", R - " << front->right->data;
            pendingNodes.push(front->right);
        }

        cout << endl;
    }
}