(1) Iterative :-

Node * deleteNode( Node * head, int i ){
    if( i == 0 ){
        Node * temp = head;
        head = head -> next;
        delete temp;
        return head;
    }

    int count = 0;
    Node * temp = head;
    while( temp != NULL && count < i - 1 ){
        temp = temp->next;
        count++;
    }

    if( temp != NULL ){
        Node * a = temp -> next;
        Node * b = a->next;
        temp->next = b;
        delete a;
    }

    return head;
}

(2) Recursive :-

Node * deleteNodeRecursively( Node * head, int i ){
    
    if( head == NULL && i > 0 ){
        return head;
    }

    if( i == 0 ){
        Node * temp = head->next;
        delete head;
        return temp;
    }

    Node * next = deleteNodeRecursively( head->next, i-1 );

    head->next = next;

    return head;
}